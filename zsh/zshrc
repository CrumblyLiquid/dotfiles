# Resources:
# https://wiki.archlinux.org/title/Zsh
# https://zsh.sourceforge.io/Guide/zshguide02.html#l24

# Enable Starship prompt
eval "$(starship init zsh)"
# Initialize zoxide
eval "$(zoxide init --cmd cd zsh)"
# Fzf integration
eval "$(fzf --zsh)"

# Inspired by https://www.youtube.com/watch?v=ud7YxC33Z3w
# Plugin manager
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit.zinit.git"
[ ! -d "$ZINIT_HOME" ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d "$ZINIT_HOME/.git" ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

# Load plugin manager
source "${ZINIT_HOME}/zinit.zsh"

# Plugins
zinit ice depth=1
zinit light jeffreytse/zsh-vi-mode

zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions

zinit light Aloxaf/fzf-tab

# OMZ pluggins
zinit snippet OMZP::git
zinit snippet OMZP::command-not-found

# Cache completions
autoload -Uz compinit && compinit -d "${ZDOTDIR}/zcompdump-${ZSH_VERSION}"

# Replay cached completions
zinit cdreplay -q

# === Keybindings ===
# Set keybindings to Vim mode
bindkey -v
# Make switching between modes faster
export KEYTIMEOUTE=1

# Forward and backward searching in history
# with something typed in
# bindkey '^p' history-search-backward
# bindkey '^n' history-search-forward

# === History ===
[ ! -d "$XDG_STATE_HOME/zsh" ] && mkdir -p "$XDG_STATE_HOME/zsh"
HISTFILE="$XDG_STATE_HOME/zsh/history"
# The size of history to load
HISTSIZE=10000
# The size of history to save
# Should be same size or smaller than $HISTSIZE
SAVEHIST=$HISTSIZE
# No duplicates
HISTDUP=erase

# Note: Capitalization and underscores (`_`) don't matter
#       for setting options

# Append to the history file incrementally
# Each command is added to the history when executed
setopt inc_append_history
# Share history between terminal sessions
setopt share_history
# Saves start time and duration for each command
setopt extended_history
# Commands that start with a space won't be saved to history
# (for example for sensitive commands)
setopt hist_ignore_space
# Ignore duplicate commands
# (as in when a command is run multiple times at once)
# (does nothing when duplicate commands aren't adjecent)
setopt hist_ignore_dups
# Ignore duplicates commands across the whole history
# setopt hist_ignore_all_dups
# Remove duplicates first when history space runs out
setopt hist_expire_dups_first
# Don't include duplicates in backwards search
setopt hist_find_no_dups
# Tidy up the command by removing any excess blanks
# (this can make it a duplicate of another command)
setopt hist_reduce_blanks

# === Other misc options ===

# Disable beeping
setopt no_beep

# If it's a directory and not a command you don't have to
# use cd to cd into the direcotry
setopt auto_cd

# Enable extended globbing
setopt extended_glob


# === Completion styling ===
# Match lower case characters to upper case characters
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# === Exports ===

# Enable 256-color mode
export TERM='xterm-256color'

# Set nvim as the default editor
export EDITOR='nvim'
export VISUAL="$EDITOR"

# === Up ===
# The best function I've ever used

# Go up certain amount of directories
up () {
  if [ -z $1 ]; then
    cd ..
  elif [ $1 -gt 0 ]; then
    let count=1
    cdstr=".."
    while [ $count -lt $1 ]; do
      cdstr="$cdstr/.."
      let count=count+1
    done
    cd $cdstr
  else
    echo 'Argument must be a positive integer.'
  fi
}

# === Aliases ===

# Git
# Not needed for now because of OMZ git plugin
#for al in `git --list-cmds=alias`; do
#    alias g$al="git $al"
#done

# Open file with the default program
alias open='xdg-open'

# Go to .dotfiles directory
alias dotfiles='cd ~/.dotfiles'
alias dots=dotfiles

# List files
alias ls='eza --icons=auto'
alias ll='ls -alh'
alias sl='sl -e'

alias gpp='g++'
alias gppwp='g++ -Wall -pedantic'
alias gppwpa='g++ -Wall -pedantic -fsanitize=address'

alias vim='nvim'
alias nv='nvim'

alias cat='bat'

# Use custom hsts cache file location
alias wget='wget --hsts-file="$XDG_DATA_HOME/wget-hsts"'

# Use custom home
alias adb='HOME="$XDG_DATA_HOME"/android adb'

export GEM_HOME="$(gem env user_gemhome)"
path+=("$GEM_HOME/bin")
export PATH
